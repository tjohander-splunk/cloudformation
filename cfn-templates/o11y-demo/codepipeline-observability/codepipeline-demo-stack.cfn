---
AWSTemplateFormatVersion: "2010-09-09"

Description:
  This stack will build a CodePipeline CI/CD Workflow to watch build and deploy a Java application.
  The source version control system in this case is Github, although CodeCommit, BitBucket or Github Enterprise Server
  could be used.  The pipeline will execute the Maven build script and pass output artifacts to CodeDeploy.  CodeDeploy
  will take over and install the artifact to the Application server, which is configured to run the built .jar file as a
  Systemd service.

Metadata:

Parameters:
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.
  GitHubConnectionArn:
    Type: String
    Description: The ARN of an existing, active AWS CodeStar Connection to a Github Account
  KeyName:
    Type: String
    Description: The name of the AWS KeyPair that can connect to the app server

Rules:

Mappings:

Conditions:

Transform:

Resources:
  MyCodeStarConnection:
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: MyVersionControlConnection
      HostArn: arn:aws:codestar-connections:us-east-2:455790677231:connection/8b9699b2-520f-41a8-89fc-97ccafe71c5c
      ProviderType: GitHub
      Tags:
        - Tag
  MyPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        ArtifactStore
      ArtifactStores:
        - ArtifactStoreMap
      DisableInboundStageTransitions:
        - StageTransition
      Name: String
      RestartExecutionOnUpdate: Boolean
      RoleArn: String
      Stages:
        - StageDeclaration
      Tags:
        - Tag
  MyAppServer:
    Type: AWS::EC2::Instance
    Properties:
      KeyName:
        Ref: KeyName
      SecurityGroups:
        - !Ref logical name of AWS::EC2::SecurityGroup resource
      UserData:
        Fn::Base64: !Sub |
          cat << EOF >> /etc/systemd/system/my-app.service
          [Unit]
          Description=This is what my service does

          [Service]
          ExecStart= /usr/bin/java -jar /home/ec2-user/app/app.jar

          [Install]
          WantedBy=multi-user.target
          EOF
      InstanceType: t2.small
      AvailabilityZone: us-east-2a
      ImageId: ami-0ff8a91507f77f867
      Volumes:
        - VolumeId: !Ref logical name of AWS::EC2::Volume resource
          Device: /dev/sdk
      Tags:
        - Key: Name
          Value: AppServer
        - Key: application
          Value: Spring Pet Clinic
  MySNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: "add valid email address"
          Protocol: email

Outputs:
  InstanceId:




